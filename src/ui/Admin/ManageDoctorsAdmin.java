/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui.Admin;

import java.awt.Color;
import java.util.HashSet;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import model.Doctor.Doctor;
import model.Doctor.DoctorDirectory;
import model.Hospital.Hospital;
import model.Hospital.HospitalDirectory;
import model.Patient.PatientDirectory;
import model.Person.Person;
import model.Person.PersonDirectory;

/**
 *
 * @author Harshada
 */
public class ManageDoctorsAdmin extends javax.swing.JFrame {

    /**
     * Creates new form ManageDoctorsAdmin
     */
    DoctorDirectory doctorList;
    Doctor doctor;
    PersonDirectory personList;
    Person person;
    PatientDirectory patientList;
    HospitalDirectory hospitalList;

    public ManageDoctorsAdmin(DoctorDirectory doctorList1, PersonDirectory personList1, PatientDirectory patientList1, HospitalDirectory hospitalList1) {
        initComponents();
        this.doctorList = doctorList1;
        this.personList = personList1;
        this.patientList = patientList1;
        this.hospitalList = hospitalList1;
        populateTable();
        populateFields();
        
        txtName.setText("Doctor");
        txtUsername.setText("Doctor");
        txtPassword.setText("Sch$54321");
        txtConfirmPassword.setText("Sch$54321");
        comboSpeciality.setSelectedItem("Neuro");
        comboGender.setSelectedItem("Female");
        txtEmail.setText("b@gmail.com");
        txtAge.setText("23");
        txtPhone.setText("1234567890");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblUsername = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        txtUsername = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDoctor = new javax.swing.JTable();
        lblPassword = new javax.swing.JLabel();
        lblConfirmPassword = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        comboGender = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        comboSpeciality = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        comboHospital = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();
        txtConfirmPassword = new javax.swing.JPasswordField();
        txtPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(796, 639));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblUsername.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblUsername.setText("Username");
        getContentPane().add(lblUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 100, 30));

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/updated.png"))); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 300, 120, 30));
        getContentPane().add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 150, 30));

        tblDoctor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Username", "Password", "ConfirmPassword", "Age", "Gender", "Phone", "Speciality", "Hospital", "Email"
            }
        ));
        jScrollPane2.setViewportView(tblDoctor);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 720, 200));

        lblPassword.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPassword.setText("Password");
        getContentPane().add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 100, 30));

        lblConfirmPassword.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblConfirmPassword.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblConfirmPassword.setText("Confirm Password");
        getContentPane().add(lblConfirmPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, -1, 30));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Email");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, 70, 30));
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 150, 30));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Age");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 70, 70, 30));
        getContentPane().add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 70, 140, 30));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Gender");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 110, 80, 30));

        comboGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Female", "Male" }));
        comboGender.setSelectedIndex(-1);
        getContentPane().add(comboGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 110, 140, 30));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Phone");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 150, 90, 30));
        getContentPane().add(txtPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 150, 140, 30));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Speciality");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 190, 80, 30));

        comboSpeciality.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Neuro", "Ortho", "Gynac", "Dentist" }));
        comboSpeciality.setSelectedIndex(-1);
        getContentPane().add(comboSpeciality, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 190, 140, 30));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Hospital");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 230, 80, 30));

        getContentPane().add(comboHospital, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 230, 140, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CREATE DOCTOR");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 5, 170, 40));

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, 90, 30));

        lblName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblName.setText("Name");
        getContentPane().add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 100, 30));

        btnCreate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCreate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/plus (1).png"))); // NOI18N
        btnCreate.setText("CREATE");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        getContentPane().add(btnCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 300, 120, 30));
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 150, 30));

        btnView.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnView.setText("VIEW");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        getContentPane().add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 300, 90, 30));
        getContentPane().add(txtConfirmPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 150, 30));
        getContentPane().add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 150, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try
        {
        DefaultTableModel model = (DefaultTableModel) tblDoctor.getModel();
        //Get selected row values
        if (tblDoctor.getSelectedRowCount() == 1) {
             if (validateData())
             {
            tblDoctor.setValueAt(txtName.getText(), tblDoctor.getSelectedRow(), 0);
            tblDoctor.setValueAt(txtUsername.getText(), tblDoctor.getSelectedRow(), 1);
            tblDoctor.setValueAt(txtPassword.getText(), tblDoctor.getSelectedRow(), 2);
            tblDoctor.setValueAt(txtConfirmPassword.getText(), tblDoctor.getSelectedRow(), 3);
            tblDoctor.setValueAt(txtAge.getText(), tblDoctor.getSelectedRow(), 4);
            tblDoctor.setValueAt(comboGender.getSelectedItem(), tblDoctor.getSelectedRow(), 5);
            tblDoctor.setValueAt(txtPhone.getText(), tblDoctor.getSelectedRow(), 6);
            tblDoctor.setValueAt(comboSpeciality.getSelectedItem(), tblDoctor.getSelectedRow(), 7);
            tblDoctor.setValueAt(comboHospital.getSelectedItem(), tblDoctor.getSelectedRow(), 8);
            tblDoctor.setValueAt(txtEmail.getText(), tblDoctor.getSelectedRow(), 9);

            JOptionPane.showMessageDialog(this, "Record Updated Successfully");
            doctorList.UpdateList(txtName.getText(), txtUsername.getText(),
                    txtPassword.getText(), txtConfirmPassword.getText(), txtEmail.getText(), Integer.valueOf(txtAge.getText()),
                    comboGender.getSelectedItem().toString(),
                    Long.valueOf(txtPhone.getText()),
                    comboSpeciality.getSelectedItem().toString(),
                    comboHospital.getSelectedItem().toString());

            //Setting text to blank once record has been inserted
            txtName.setText("");
            txtEmail.setText("");
            txtUsername.setText("");
            txtPassword.setText("");
            txtConfirmPassword.setText("");
            txtAge.setText("");
            txtPhone.setText("");
            comboGender.setSelectedIndex(-1);
            comboSpeciality.setSelectedIndex(-1);
            comboHospital.setSelectedIndex(-1);
            }

        } else {
            if (tblDoctor.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Table is empty");
            } else {
                JOptionPane.showMessageDialog(this, "Please select a single record to update");
            }
        }
       
        }
         catch(Exception e)
        {
             JOptionPane.showMessageDialog(this, "User loggedIn Successfully");
        }
       
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        AdminOperations adOps = new AdminOperations(personList, doctorList, patientList,hospitalList);
        adOps.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        try
        {
        if(validateData())
        {
        doctor = doctorList.addDoctorRecord();
        doctor.person.setFullName(txtName.getText());
        txtName.setText("");
        doctor.person.setUsername(txtUsername.getText());
        txtUsername.setText("");
        doctor.person.setEmail(txtEmail.getText());
        txtEmail.setText("");
        doctor.person.setPassword(txtPassword.getText());
        txtPassword.setText("");
        doctor.person.setConfirmPassword(txtConfirmPassword.getText());
        txtConfirmPassword.setText("");
        doctor.person.setGender(comboGender.getSelectedItem().toString());
        comboGender.setSelectedIndex(-1);
        doctor.person.setRole("DOCTOR");
        int result = Integer.parseInt(txtAge.getText());
        doctor.person.setAge(result);
        txtAge.setText("");
        long phoneNo = Long.parseLong(txtPhone.getText());
        doctor.person.setPhoneNo(phoneNo);
        txtPhone.setText("");
        doctor.setSpeciality(comboSpeciality.getSelectedItem().toString());
        comboSpeciality.setSelectedIndex(-1);
        doctor.setHospital(comboHospital.getSelectedItem().toString());
        comboHospital.setSelectedIndex(-1);

        JOptionPane.showMessageDialog(this, "Record added successfully");
        populateTable();
        }
        }
         catch(Exception e)
        {
             JOptionPane.showMessageDialog(this, "Please try again");
        }
    
        
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        try
        {
        if (tblDoctor.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Table is empty");
        }

        int selectedRowIndex = tblDoctor.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblDoctor.getModel();
        Doctor selectedDoctor = (Doctor) model.getValueAt(selectedRowIndex, 0);
        txtName.setText(selectedDoctor.person.getFullName());
        txtEmail.setText(selectedDoctor.person.getEmail());
        txtUsername.setText(selectedDoctor.person.getUsername());
        txtPassword.setText(selectedDoctor.person.getPassword());
        txtConfirmPassword.setText(selectedDoctor.person.getConfirmPassword());
        String age = Integer.toString(selectedDoctor.person.getAge());
        txtAge.setText(age);
        comboGender.setSelectedItem(selectedDoctor.person.getGender());
        String strLong = Long.toString(selectedDoctor.person.getPhoneNo());
        txtPhone.setText(strLong);
        comboSpeciality.setSelectedItem(selectedDoctor.getSpeciality());
        comboHospital.setSelectedItem(selectedDoctor.getHospital());
        }
         catch(Exception e)
        {
             JOptionPane.showMessageDialog(this, "Please try again");
        }
    }//GEN-LAST:event_btnViewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> comboGender;
    private javax.swing.JComboBox<String> comboHospital;
    private javax.swing.JComboBox<String> comboSpeciality;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblConfirmPassword;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTable tblDoctor;
    private javax.swing.JTextField txtAge;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblDoctor.getModel();
        model.setRowCount(0);
        System.out.println(doctorList);
        for (Doctor profile : doctorList.getDoctorList()) {

            Object[] row = new Object[10];
            row[0] = profile;
            row[1] = profile.person.getUsername();
            row[2] = profile.person.getPassword();
            row[3] = profile.person.getConfirmPassword();
            row[4] = profile.person.getAge();
            row[5] = profile.person.getGender();
            row[6] = profile.person.getPhoneNo();
            row[7] = profile.getSpeciality();
            row[8] = profile.getHospital();
            row[9] = profile.person.getEmail();
            model.addRow(row);
        }
    }

    public  boolean validateData() {
        String username = txtUsername.getText();
        String password = txtPassword.getText();
        String cnfpassword = txtConfirmPassword.getText();

        txtUsername.setBorder(new LineBorder(new Color(128, 128, 128)));
        txtPassword.setBorder(new LineBorder(new Color(128, 128, 128)));
        txtConfirmPassword.setBorder(new LineBorder(new Color(128, 128, 128)));

        if (username == null || username.equals("")) {
            txtUsername.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblUsername.setForeground(Color.RED);
            JOptionPane.showMessageDialog(null, "Username already ");
            return false;
        }


        if (password == null || password.equals("")) {
            JOptionPane.showMessageDialog(null, "Password can't be empty.");
            txtUsername.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblPassword.setForeground(Color.RED);
            return false;
        }

        if (!passwordPatternCorrect()) {
            JOptionPane.showMessageDialog(null, "Paasword should be at least 6 digits and+"
                    + " a combination of number, uppercarse, lowercase abd secial cjaracter $,*,#,&");
            txtPassword.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblName.setForeground(Color.RED);
            return false;
        }

        if (!password.equals(cnfpassword)) {
            JOptionPane.showMessageDialog(null, "Password does not match.");
            txtPassword.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtConfirmPassword.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblName.setBackground(Color.red);
            lblConfirmPassword.setBackground(Color.red);
            return false;

        }

        if (txtName.getText().length() < 2 || !txtName.getText().matches("[a-zA-Z]+")) {
            JOptionPane.showMessageDialog(this, "Enter proper  name.");
            return false;
        }
        if (txtUsername.getText().length() < 2 || !txtUsername.getText().matches("[a-zA-Z]+")) {
            JOptionPane.showMessageDialog(this, "Enter proper username.");
            return false;
        }

        if (txtPhone.getText().isEmpty() || txtPhone.getText().trim().length() != 10 || !txtPhone.getText().chars().allMatch(Character::isDigit)) {

            JOptionPane.showMessageDialog(this, "Please enter a valid phone no");
            return false;
        }
        if (!emailAddressValidation(txtEmail.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Please enter a valid email address");
            return false;
        }

        if (!txtAge.getText().matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Enter proper zip");
            return false;
        }
        if (comboGender.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Please select a gender");
            return false;
        }
        if (comboSpeciality.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Please select speciality.");
            return false;
        }
        if (comboHospital.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Please select a hospital.");
            return false;
        }

        return true;
    }

    private boolean passwordPatternCorrect() {
        Pattern p = Pattern.compile("^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[$*#&])[A-Za-z\\d$*#&]{6,}$");
        Matcher m = p.matcher(txtPassword.getText());
        boolean b = m.matches();
        return b;
    }

    private boolean emailAddressValidation(String email) {
      String emailValidation = "^[A-Za-z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$";
        Pattern pattern = Pattern.compile(emailValidation);
        Matcher m = pattern.matcher(email);
        return m.matches();
    }
    
        private void populateFields()
    {
         Set<String> fhos = new HashSet<>();
        for( Hospital hos : hospitalList.getHospitalList()){
           
            fhos.add(hos.getHospitalName());
        }
        System.out.println(hospitalList.getHospitalList());

       DefaultComboBoxModel model2 = (DefaultComboBoxModel) comboHospital.getModel();
       model2.addAll(fhos);
        
    }
    
}
