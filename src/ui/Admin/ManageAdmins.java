/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui.Admin;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Doctor.DoctorDirectory;
import model.Hospital.HospitalDirectory;
import model.Patient.PatientDirectory;
import model.Person.Person;
import model.Person.PersonDirectory;

/**
 *
 * @author Harshada
 */
public class ManageAdmins extends javax.swing.JFrame {

    /**
     * Creates new form ManageAdmins
     */
    PersonDirectory personList;
    DoctorDirectory doctorList;
    PatientDirectory patientList;
    HospitalDirectory hospitalList;

    public ManageAdmins() {
        initComponents();
        //personList = new PersonDirectory();
        populateTable();
    }

    public ManageAdmins(PersonDirectory personList1,DoctorDirectory doctorList1, PatientDirectory patientList1, HospitalDirectory hospitalList1) {
        initComponents();
        this.personList = personList1;
        this.doctorList = doctorList1;
        this.patientList = patientList1;
        this.hospitalList = hospitalList1;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblUser = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        lblPassword = new javax.swing.JLabel();
        comboGender = new javax.swing.JComboBox<>();
        lblConfirmPassword = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        comboRole = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtFullname = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        lblName = new javax.swing.JLabel();
        txtConfirmPassword = new javax.swing.JPasswordField();
        lblUsername = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(752, 649));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Fullname", "User", "Password", "Confirm Password", "Role", "PhoneNo", "Gender", "Email", "Age"
            }
        ));
        jScrollPane1.setViewportView(tblUser);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 624, 185));

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 350, 90, 40));

        lblPassword.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPassword.setText("Password");
        getContentPane().add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 80, 31));

        comboGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        comboGender.setSelectedIndex(-1);
        getContentPane().add(comboGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 130, 149, 33));

        lblConfirmPassword.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblConfirmPassword.setText("Confirm Password");
        getContentPane().add(lblConfirmPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, 30));
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 180, 149, 33));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Phone No");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 80, -1, 30));
        getContentPane().add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 230, 149, 33));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Gender");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 130, 60, 30));

        comboRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COMMUNITY ADMIN", "HOSPITAL ADMIN" }));
        comboRole.setSelectedIndex(-1);
        getContentPane().add(comboRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 270, -1, 30));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Email");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 180, 60, 30));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Role");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, 67, 30));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Age");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, 45, 30));
        getContentPane().add(txtFullname, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 150, 30));
        getContentPane().add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 127, 150, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MANAGE ADMINS");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 171, 40));
        getContentPane().add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 150, 31));

        lblName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblName.setText("Fullname");
        getContentPane().add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 85, 30));
        getContentPane().add(txtConfirmPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 150, 33));

        lblUsername.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblUsername.setText("Username");
        getContentPane().add(lblUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, 33));
        getContentPane().add(txtPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 80, 149, 31));

        btnView.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnView.setText("VIEW");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        getContentPane().add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 350, 100, 40));

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/updated.png"))); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 350, -1, 40));

        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/delete.png"))); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 350, 110, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        try
        {
        if (tblUser.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Table is empty");
        }

        int selectedRowIndex = tblUser.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblUser.getModel();
        Person selectedPerson = (Person) model.getValueAt(selectedRowIndex, 0);
        txtFullname.setText(selectedPerson.getFullName());
        txtUsername.setText(selectedPerson.getUsername());
        txtPassword.setText(selectedPerson.getPassword());
        txtConfirmPassword.setText(selectedPerson.getConfirmPassword());
        comboRole.setSelectedItem(selectedPerson.getRole());
        String phoneNo = Long.toString(selectedPerson.getPhoneNo());
        txtPhone.setText(phoneNo);
        comboRole.setSelectedItem(selectedPerson.getRole());
        comboGender.setSelectedItem(selectedPerson.getGender());
        txtEmail.setText(selectedPerson.getEmail());
        String age = Integer.toString(selectedPerson.getAge());
        txtAge.setText(age);
        }
        catch(Exception e)
        {
             JOptionPane.showMessageDialog(this, "Please try again");
        }

    }//GEN-LAST:event_btnViewActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        AdminOperations adOps = new AdminOperations(personList,doctorList,patientList,hospitalList);
        adOps.setVisible(true);
        dispose();

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try
        {
        DefaultTableModel model = (DefaultTableModel) tblUser.getModel();
      
        //Get selected row values
        if (tblUser.getSelectedRowCount() == 1) {
            tblUser.setValueAt(txtFullname.getText(), tblUser.getSelectedRow(), 0);
            tblUser.setValueAt(txtUsername.getText(), tblUser.getSelectedRow(), 1);
            tblUser.setValueAt(txtPassword.getText(), tblUser.getSelectedRow(), 2);
            tblUser.setValueAt(txtConfirmPassword.getText(), tblUser.getSelectedRow(), 3);
            tblUser.setValueAt(comboRole.getSelectedItem(), tblUser.getSelectedRow(), 4);
            tblUser.setValueAt(txtPhone.getText(), tblUser.getSelectedRow(), 5);
            tblUser.setValueAt(comboGender.getSelectedItem(), tblUser.getSelectedRow(), 6);
            tblUser.setValueAt(txtEmail.getText(), tblUser.getSelectedRow(), 7);
            tblUser.setValueAt(txtAge.getText(), tblUser.getSelectedRow(), 8);
            JOptionPane.showMessageDialog(this, "Record Updated Successfully");
            personList.UpdateList(txtFullname.getText(),txtUsername.getText(),
                    txtPassword.getText(),txtConfirmPassword.getText(),
                    comboRole.getSelectedItem().toString(),
                    Long.valueOf(txtPhone.getText()),
                    comboGender.getSelectedItem().toString(),
                    txtEmail.getText(),Integer.valueOf(txtAge.getText()));
            //Setting text to blank once record has been inserted
            txtFullname.setText("");
            txtUsername.setText("");
            txtPassword.setText("");
            txtConfirmPassword.setText("");
            txtPhone.setText("");
            txtEmail.setText("");
            txtAge.setText("");
            comboRole.setSelectedIndex(-1);
            comboGender.setSelectedIndex(-1);

        } else {
            if (tblUser.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Table is empty");
            } else {
                JOptionPane.showMessageDialog(this, "Please select a single record to update");
            }
        }
        }
         catch(Exception e)
        {
             JOptionPane.showMessageDialog(this, "Please try again");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try
        {
        int selectedRowIndex = tblUser.getSelectedRow();
        //Check if row selected
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblUser.getModel();
        Person selectedPerson = (Person) model.getValueAt(selectedRowIndex, 0);
        personList.deletePerson(selectedPerson);
        JOptionPane.showMessageDialog(this, "Person has been deleted");
        populateTable();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Please Try again");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> comboGender;
    private javax.swing.JComboBox<String> comboRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblConfirmPassword;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTable tblUser;
    private javax.swing.JTextField txtAge;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFullname;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblUser.getModel();
        model.setRowCount(0);

        for (Person person : personList.getPersonList()) {

            Object[] row = new Object[9];
            row[0] = person;
            row[1] = person.getUsername();
            row[2] = person.getPassword();
            row[3] = person.getConfirmPassword();
            row[4] = person.getRole();
            row[5] = person.getPhoneNo();
            row[6] = person.getGender();
            row[7] = person.getEmail();
            row[8] = person.getAge();
            model.addRow(row);
        }
    }
}
