/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui.Admin;

import java.awt.Color;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import model.Doctor.Doctor;
import model.Doctor.DoctorDirectory;
import model.Hospital.HospitalDirectory;
import model.Patient.Patient;
import model.Patient.PatientDirectory;
import model.Person.PersonDirectory;

/**
 *
 * @author Harshada
 */
public class ManagePatients extends javax.swing.JFrame {

    /**
     * Creates new form ManagePatients
     */
    HospitalDirectory hospitalList;
    PatientDirectory patientList;
    DoctorDirectory doctorList;
    PersonDirectory personList;
    Patient patient;

    public ManagePatients(DoctorDirectory doctorList1, PersonDirectory personList1, PatientDirectory patientList1, HospitalDirectory hospitalList1) {
        initComponents();
        this.doctorList = doctorList1;
        this.personList = personList1;
        this.patientList = patientList1;
        this.hospitalList = hospitalList1;
        populateTable();

        txtPatientName.setText("Patient");
        txtUsername.setText("Patient");
        password.setText("Sch$54321");
        confirmPassword.setText("Sch$54321");
        txtPatientDisease.setText("Fever");
        patientGender.setSelectedItem("Female");
        txtEmail.setText("b@gmail.com");
        txtAge.setText("23");
        txtPatientPhoneNo.setText("1234567890");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        lblcnfPassword = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        txtPatientPhoneNo = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        txtEmail = new javax.swing.JTextField();
        txtPatientDisease = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        lblUsername = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        patientGender = new javax.swing.JComboBox<>();
        txtUsername = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatient = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        confirmPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(844, 691));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Gender");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 220, 89, 30));

        lblcnfPassword.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblcnfPassword.setText("Confirm Password");
        getContentPane().add(lblcnfPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, -1, 30));
        getContentPane().add(txtPatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, 170, 30));
        getContentPane().add(txtPatientPhoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 180, 150, 30));

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 350, 80, 40));
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 260, 170, 30));
        getContentPane().add(txtPatientDisease, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 140, 150, 30));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Patient Email");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, 110, 30));

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/updated.png"))); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 350, -1, 40));

        lblUsername.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblUsername.setText("Username");
        getContentPane().add(lblUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 71, 30));
        getContentPane().add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 100, 150, 30));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText(" Disease");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 140, 80, 30));

        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/plus (1).png"))); // NOI18N
        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 350, 90, 40));

        patientGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Female", "Male" }));
        patientGender.setSelectedIndex(-1);
        getContentPane().add(patientGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 220, 150, 30));
        getContentPane().add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, 170, 30));

        lblPassword.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPassword.setText("Password");
        getContentPane().add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, -1, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MANAGE PATIENTS");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, 200, 50));

        btnView.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnView.setText("VIEW");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        getContentPane().add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 350, 90, 40));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Patient Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, -1, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Phone No");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 180, 70, 30));

        tblPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient Name", "Username", "Password", "Confirm Password", "Email", "Age", "Disease", "PhoneNo", "Gender"
            }
        ));
        jScrollPane1.setViewportView(tblPatient);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 740, 194));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Age");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 100, 60, 30));
        getContentPane().add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 180, 170, 30));
        getContentPane().add(confirmPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 220, 170, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        // TODO add your handling code here:
        AdminOperations adOps = new AdminOperations(personList, doctorList, patientList, hospitalList);
        adOps.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        try
        {
        if (validateData()) {
            patient = patientList.addPatientRecord();

            patient.person.setFullName(txtPatientName.getText());
            txtPatientName.setText("");
            patient.person.setUsername(txtUsername.getText());
            txtUsername.setText("");
            patient.person.setEmail(txtEmail.getText());
            txtEmail.setText("");
            patient.person.setPassword(password.getText());
            System.out.println(password.getText());
            password.setText("");
            patient.person.setConfirmPassword(confirmPassword.getText());
            confirmPassword.setText("");
            patient.person.setRole("PATIENT");
            patient.person.setGender(patientGender.getSelectedItem().toString());
            patientGender.setSelectedIndex(-1);
            int result = Integer.parseInt(txtAge.getText());
            patient.person.setAge(result);
            txtAge.setText("");
            long phoneNo = Long.parseLong(txtPatientPhoneNo.getText());
            patient.person.setPhoneNo(phoneNo);
            txtPatientPhoneNo.setText("");
            patient.setDisease(txtPatientDisease.getText());
            JOptionPane.showMessageDialog(this, "Record added successfully");
            populateTable();

            //            //patient.setIsOldPatient();
            //            patient.setIsOldPatient(check.isSelected());
            //
            //
        }
        }
        catch(Exception e)
        {
             JOptionPane.showMessageDialog(this, "Please try again");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        try
        {
        if (tblPatient.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Table is empty");
        }

        int selectedRowIndex = tblPatient.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();
        Patient selectedPatient = (Patient) model.getValueAt(selectedRowIndex, 0);
        txtPatientName.setText(selectedPatient.person.getFullName());
        txtEmail.setText(selectedPatient.person.getEmail());
        txtUsername.setText(selectedPatient.person.getUsername());
        password.setText(selectedPatient.person.getPassword());
        confirmPassword.setText(selectedPatient.person.getConfirmPassword());
        txtPatientDisease.setText(selectedPatient.getDisease());
        String age = Integer.toString(selectedPatient.person.getAge());
        txtAge.setText(age);
        patientGender.setSelectedItem(selectedPatient.person.getGender());
        String strLong = Long.toString(selectedPatient.person.getPhoneNo());
        txtPatientPhoneNo.setText(strLong);
        }
         catch(Exception e)
        {
             JOptionPane.showMessageDialog(this, "Please try again");
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try {
            DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();
            //Get selected row values
            if (tblPatient.getSelectedRowCount() == 1) {
                if (validateData()) {
                    tblPatient.setValueAt(txtPatientName.getText(), tblPatient.getSelectedRow(), 0);
                    tblPatient.setValueAt(txtUsername.getText(), tblPatient.getSelectedRow(), 1);
                    tblPatient.setValueAt(password.getText(), tblPatient.getSelectedRow(), 2);
                    tblPatient.setValueAt(confirmPassword.getText(), tblPatient.getSelectedRow(), 3);
                    tblPatient.setValueAt(txtEmail.getText(), tblPatient.getSelectedRow(), 4);
                    tblPatient.setValueAt(txtAge.getText(), tblPatient.getSelectedRow(), 5);
                    tblPatient.setValueAt(txtPatientDisease.getText(), tblPatient.getSelectedRow(), 6);
                    tblPatient.setValueAt(txtPatientPhoneNo.getText(), tblPatient.getSelectedRow(), 7);
                    tblPatient.setValueAt(patientGender.getSelectedItem(), tblPatient.getSelectedRow(), 8);
                    JOptionPane.showMessageDialog(this, "Record Updated Successfully");

                    patientList.UpdatePatientList(txtPatientName.getText(), txtUsername.getText(), password.getText(), confirmPassword.getText(), txtEmail.getText(), Integer.valueOf(txtAge.getText()), patientGender.getSelectedItem().toString(), Long.valueOf(txtPatientPhoneNo.getText()), txtPatientDisease.getText());

                    //Setting text to blank once record has been inserted
                    txtPatientName.setText("");
                    txtUsername.setText("");
                    password.setText("");
                    confirmPassword.setText("");
                    txtEmail.setText("");
                    txtAge.setText("");
                    txtPatientDisease.setText("");
                    txtPatientPhoneNo.setText("");
                    patientGender.setSelectedIndex(-1);

                }
            } else {
                if (tblPatient.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(this, "Table is empty");
                } else {
                    JOptionPane.showMessageDialog(this, "Please select a single record to update");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please try again");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JPasswordField confirmPassword;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblcnfPassword;
    private javax.swing.JPasswordField password;
    private javax.swing.JComboBox<String> patientGender;
    private javax.swing.JTable tblPatient;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtPatientDisease;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientPhoneNo;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblPatient.getModel();
        model.setRowCount(0);

        for (Patient profile : patientList.getPatientList()) {

            Object[] row = new Object[9];
            row[0] = profile;
            row[1] = profile.person.getUsername();
            row[2] = profile.person.getPassword();
            row[3] = profile.person.getConfirmPassword();
            row[4] = profile.person.getEmail();
            row[5] = profile.person.getAge();
            row[6] = profile.getDisease();
            row[7] = profile.person.getPhoneNo();
            row[8] = profile.person.getGender();
            model.addRow(row);
        }
    }

    private boolean validateData() {
        String username = txtUsername.getText();
        String password1 = password.getText();
        String cnfpassword = confirmPassword.getText();

        txtUsername.setBorder(new LineBorder(new Color(128, 128, 128)));
        password.setBorder(new LineBorder(new Color(128, 128, 128)));
        confirmPassword.setBorder(new LineBorder(new Color(128, 128, 128)));

        if (username == null || username.equals("")) {
            txtUsername.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblUsername.setForeground(Color.RED);
            JOptionPane.showMessageDialog(null, "Username already ");
            return false;
        }

        if (password == null || password.equals("")) {
            JOptionPane.showMessageDialog(null, "Password can't be empty.");
            txtUsername.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblPassword.setForeground(Color.RED);
            return false;
        }

        if (!passwordPatternCorrect()) {
            JOptionPane.showMessageDialog(null, "Paasword should be at least 6 digits and+"
                    + " a combination of number, uppercarse, lowercase abd secial cjaracter $,*,#,&");
            password.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblUsername.setForeground(Color.RED);
            return false;
        }

        if (!password1.equals(cnfpassword)) {
            JOptionPane.showMessageDialog(null, "Password does not match.");
            password.setBorder(BorderFactory.createLineBorder(Color.RED));
            confirmPassword.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblUsername.setBackground(Color.red);
            lblcnfPassword.setBackground(Color.red);
            return false;

        }

        if (txtPatientName.getText().length() < 2 || !txtPatientName.getText().matches("[a-zA-Z]+")) {
            JOptionPane.showMessageDialog(this, "Enter proper  name.");
            return false;
        }
        if (txtUsername.getText().length() < 2 || !txtUsername.getText().matches("[a-zA-Z]+")) {
            JOptionPane.showMessageDialog(this, "Enter proper username.");
            return false;
        }

        if (txtPatientPhoneNo.getText().isEmpty() || txtPatientPhoneNo.getText().trim().length() != 10 || !txtPatientPhoneNo.getText().chars().allMatch(Character::isDigit)) {

            JOptionPane.showMessageDialog(this, "Please enter a valid phone no");
            return false;
        }
        if (!emailAddressValidation(txtEmail.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Please enter a valid email address");
            return false;
        }

        if (!txtAge.getText().matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Enter proper age");
            return false;
        }
        if (patientGender.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Please select a gender");
            return false;
        }
        if (txtPatientDisease.getText().length() < 2 || !txtPatientDisease.getText().matches("[a-zA-Z]+")) {
            JOptionPane.showMessageDialog(this, "Enter proper  disease.");
            return false;
        }

        return true;
    }

    private boolean emailAddressValidation(String email) {
        String emailValidation = "^[A-Za-z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$";
        Pattern pattern = Pattern.compile(emailValidation);
        Matcher m = pattern.matcher(email);
        return m.matches();
    }

    private boolean passwordPatternCorrect() {
        Pattern p = Pattern.compile("^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[$*#&])[A-Za-z\\d$*#&]{6,}$");
        Matcher m = p.matcher(password.getText());
        boolean b = m.matches();
        return b;
    }
}
