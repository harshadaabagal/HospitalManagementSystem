/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui.HospitalAdmin;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Doctor.DoctorDirectory;
import model.Hospital.Hospital;
import model.Hospital.HospitalDirectory;
import model.Patient.Patient;
import model.Patient.PatientDirectory;
import model.Person.PersonDirectory;
import ui.Admin.HospitalAdminLogin;

/**
 *
 * @author Harshada
 */
public class ManageHospital extends javax.swing.JFrame {

    /**
     * Creates new form ManageHospital
     */
    PatientDirectory patientList;
    DoctorDirectory doctorList;
    Patient patient;
    PersonDirectory personList;
    HospitalDirectory hospitalList;
    Hospital hospital;

    public ManageHospital(PersonDirectory personList1, DoctorDirectory doctorList1, PatientDirectory patientList1, HospitalDirectory hospitalList1) {
        initComponents();
        this.doctorList = doctorList1;
        this.patientList = patientList1;
        this.personList = personList1;
        this.hospitalList = hospitalList1;
        populateTable();
        txtHospitalName.setText("RedCross");
        txtHospitalPhoneNo.setText("1234567890");
        txtAddress.setText("Fisher Ave");
        txtCity.setText("Boston");
        txtState.setText("Massachusetts");
        txtCountry.setText("United States");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtHospitalName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtHospitalPhoneNo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHospital = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtState = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtCountry = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(807, 579));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Hospital Name");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 125, 29));
        getContentPane().add(txtHospitalName, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 110, 160, 31));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Hosital Phone No");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 122, 34));
        getContentPane().add(txtHospitalPhoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, 160, 31));

        tblHospital.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblHospital.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Hospital Name", "PhoneNo", "Address", "City", "State", "Country"
            }
        ));
        jScrollPane1.setViewportView(tblHospital);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, 660, 170));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 204));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("MANAGE HOSPITALS");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, 320, 50));

        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/plus (1).png"))); // NOI18N
        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 90, 40));

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/updated.png"))); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 280, -1, 40));

        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/delete.png"))); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 280, 110, 40));

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, 86, 40));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Hospital City");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 100, 110, 50));
        getContentPane().add(txtCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 110, 151, 30));

        btnView.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnView.setText("VIEW");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        getContentPane().add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 280, 100, 40));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("State");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 150, 70, 30));
        getContentPane().add(txtState, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 150, 150, 30));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Address");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 110, 40));
        getContentPane().add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 190, 160, 30));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Country");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 190, 70, 30));
        getContentPane().add(txtCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 190, 150, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        try
        {
        if (validateData()) {

            hospital = hospitalList.addHospitalRecord();
            hospital.setHospitalName(txtHospitalName.getText());
            txtHospitalName.setText("");
            hospital.house.setAddressLine1(txtAddress.getText());
            txtAddress.setText("");
            long phoneNo = Long.parseLong(txtHospitalPhoneNo.getText());
            hospital.setPhoneNo(phoneNo);
            hospital.house.setCountry(txtCountry.getText());
            txtCountry.setText("");
            txtHospitalPhoneNo.setText("");
            hospital.city.setCityName(txtCity.getText());
            txtCity.setText("");
            hospital.house.setState(txtState.getText());
            txtState.setText("");

            JOptionPane.showMessageDialog(this, "Hospital Added Successfully");
            populateTable();
        }
        }
         catch(Exception e)
        {
             JOptionPane.showMessageDialog(this, "Please try again");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try {
            DefaultTableModel model = (DefaultTableModel) tblHospital.getModel();
            //Get selected row values
            if (tblHospital.getSelectedRowCount() == 1) {
                if (validateData()) {
                    tblHospital.setValueAt(txtHospitalName.getText(), tblHospital.getSelectedRow(), 0);
                    tblHospital.setValueAt(txtHospitalPhoneNo.getText(), tblHospital.getSelectedRow(), 1);
                    tblHospital.setValueAt(txtAddress.getText(), tblHospital.getSelectedRow(), 2);
                    tblHospital.setValueAt(txtCity.getText(), tblHospital.getSelectedRow(), 3);
                    tblHospital.setValueAt(txtState.getText(), tblHospital.getSelectedRow(), 4);
                    tblHospital.setValueAt(txtCountry.getText(), tblHospital.getSelectedRow(), 5);

                    JOptionPane.showMessageDialog(this, "Record Updated Successfully");
                    hospitalList.UpdateHospital(txtHospitalName.getText(), Long.valueOf(txtHospitalPhoneNo.getText()),
                            txtAddress.getText(), txtCity.getText(), txtCountry.getText(), txtState.getText());

                    //Setting text to blank once record has been inserted
                    txtHospitalName.setText("");
                    txtHospitalPhoneNo.setText("");
                    txtCity.setText("");
                    txtState.setText("");
                    txtAddress.setText("");
                    txtCountry.setText("");

                }
            } else {
                if (tblHospital.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(this, "Table is empty");
                } else {
                    JOptionPane.showMessageDialog(this, "Please select a single record to update");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please try again");
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRowIndex = tblHospital.getSelectedRow();
            //Check if row selected
            if (selectedRowIndex < 0) {
                JOptionPane.showMessageDialog(this, "Please select a row to delete");
                return;
            }
            DefaultTableModel model = (DefaultTableModel) tblHospital.getModel();
            Hospital selectedHospital = (Hospital) model.getValueAt(selectedRowIndex, 0);
            hospitalList.deleteHospital(selectedHospital);
            JOptionPane.showMessageDialog(this, "Hospital has been deleted");
            populateTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please try again");
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        HospitalAdminLogin hospitalLogin = new HospitalAdminLogin(personList, doctorList, patientList, hospitalList);
        hospitalLogin.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        try
        {
        if (tblHospital.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Table is empty");
        }

        int selectedRowIndex = tblHospital.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblHospital.getModel();
        Hospital selectedHospital = (Hospital) model.getValueAt(selectedRowIndex, 0);
        txtHospitalName.setText(selectedHospital.getHospitalName());
        String strLong = Long.toString(selectedHospital.getPhoneNo());
        txtHospitalPhoneNo.setText(strLong);
        txtAddress.setText(selectedHospital.house.getAddressLine1());
        txtCountry.setText(selectedHospital.house.getCountry());
        txtCity.setText(selectedHospital.city.getCityName());
        txtState.setText(selectedHospital.house.getState());
        }
        catch(Exception e)
        {
             JOptionPane.showMessageDialog(this, "Please try again");
        }
                
    }//GEN-LAST:event_btnViewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHospital;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtHospitalName;
    private javax.swing.JTextField txtHospitalPhoneNo;
    private javax.swing.JTextField txtState;
    // End of variables declaration//GEN-END:variables

    private boolean validateData() {

        if (txtHospitalName.getText().length() < 2 || !txtHospitalName.getText().matches("[a-zA-Z]+")) {
            JOptionPane.showMessageDialog(this, "Enter proper  name.");
            return false;
        }

        if (txtHospitalPhoneNo.getText().isEmpty() || txtHospitalPhoneNo.getText().trim().length() != 10 || !txtHospitalPhoneNo.getText().chars().allMatch(Character::isDigit)) {

            JOptionPane.showMessageDialog(this, "Please enter a valid phone no");
            return false;
        }

        if (txtCity.getText().length() < 2 || !txtCity.getText().matches("[a-zA-Z]+")) {
            JOptionPane.showMessageDialog(this, "Enter proper  name.");
            return false;
        }
        if (txtState.getText().length() < 2 || !txtCity.getText().matches("[a-zA-Z]+")) {
            JOptionPane.showMessageDialog(this, "Enter proper  name.");
            return false;
        }
        if (txtCountry.getText().length() < 2 || !txtCity.getText().matches("[a-zA-Z]+")) {
            JOptionPane.showMessageDialog(this, "Enter proper  name.");
            return false;
        }
        if (txtAddress.getText().length() < 2 || !txtCity.getText().matches("[a-zA-Z]+")) {
            JOptionPane.showMessageDialog(this, "Enter proper  name.");
            return false;
        }

        return true;

    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblHospital.getModel();
        model.setRowCount(0);

        for (Hospital profile : hospitalList.getHospitalList()) {

            Object[] row = new Object[6];
            row[0] = profile;
            row[1] = profile.getPhoneNo();
            row[2] = profile.house.getAddressLine1();
            row[3] = profile.city.getCityName();
            row[4] = profile.house.getState();
            row[5] = profile.house.getCountry();
            model.addRow(row);

        }
    }

}
